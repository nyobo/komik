<?php
    namespace App\Http\Controllers\API;

    use App\Http\Requests\{{modelName}}Request;
    use App\Http\Controllers\API\BaseController as BaseController;
    use App\{{modelName}};
    use Validator;
    class {{modelName}}Controller extends BaseController
    {
        public function index()
        {
            ${{modelNamePluralLowerCase}} = {{modelName}}::latest()->get();
            return $this->sendResponse(${{modelNamePluralLowerCase}}->toArray(), '${{modelNamePluralLowerCase}} retrieved successfully.');
            // return response()->json(${{modelNamePluralLowerCase}});
        }
        public function store({{modelName}}Request $request)
        {
        //Jika menggukana validation
        // $input = $request->all();

        // $validator = Validator::make($input, [
        //     'name' => 'required',
        //     'detail' => 'required'
        // ]);

        // if ($validator->fails()) {
        //     return $this->sendError('Validation Error.', $validator->errors());
        // }
            ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());
            return response()->json(${{modelNameSingularLowerCase}}, 201);
        }
        public function show($id)
        {
            // if (is_null(${{modelNameSingularLowerCase}})) {
            //     return $this->sendError('Product not found.');
            // }            
            ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
            return response()->json(${{modelNameSingularLowerCase}});
        }
        public function update({{modelName}}Request $request, $id)
        {
            // $input = $request->all();
            // $validator = Validator::make($input, [
            //     'name' => 'required',
            //     'detail' => 'required'
            // ]);


            // if ($validator->fails()) {
            //     return $this->sendError('Validation Error.', $validator->errors());
            // }


            // ${{modelNameSingularLowerCase}}->name = $input['name'];
            // ${{modelNameSingularLowerCase}}->detail = $input['detail'];
            // ${{modelNameSingularLowerCase}}->save();

            ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
            //kalau mengunakan yang atas bawah ini di hapus
            ${{modelNameSingularLowerCase}}->update($request->all());
            return response()->json(${{modelNameSingularLowerCase}}, 200);
        }
        public function destroy($id)
        {
            {{modelName}}::destroy($id);
            return response()->json(null, 204);
        }
    }
